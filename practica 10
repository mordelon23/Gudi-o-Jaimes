from functools import lru_cache

def isScramble(s1: str, s2: str) -> bool:
    @lru_cache(None)
    def helper(a, b):
        if a == b:
            return True
        if sorted(a) != sorted(b):
            return False

        n = len(a)
        for i in range(1, n):
            # Sin intercambio
            if helper(a[:i], b[:i]) and helper(a[i:], b[i:]):
                return True
            # Con intercambio
            if helper(a[:i], b[-i:]) and helper(a[i:], b[:-i]):
                return True
        return False

    return helper(s1, s2)

def main():
    print("Verificador de Scramble Strings")
    s1 = input("Ingresa la primera palabra (s1): ").strip()
    s2 = input("Ingresa la segunda palabra (s2): ").strip()

    if len(s1) != len(s2):
        print("❌ Las palabras deben tener la misma longitud.")
        return

    if isScramble(s1, s2):
        print(f"✅ '{s2}' SÍ es un scramble de '{s1}'.")
    else:
        print(f"❌ '{s2}' NO es un scramble de '{s1}'.")

# Corrección aquí: __name__ y "__main__"
if __name__ == "__main__":
    main()
